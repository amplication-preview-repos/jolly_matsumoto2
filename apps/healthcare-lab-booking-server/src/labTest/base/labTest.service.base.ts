/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, LabTest as PrismaLabTest } from "@prisma/client";

export class LabTestServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.LabTestCountArgs, "select">): Promise<number> {
    return this.prisma.labTest.count(args);
  }

  async labTests(args: Prisma.LabTestFindManyArgs): Promise<PrismaLabTest[]> {
    return this.prisma.labTest.findMany(args);
  }
  async labTest(
    args: Prisma.LabTestFindUniqueArgs
  ): Promise<PrismaLabTest | null> {
    return this.prisma.labTest.findUnique(args);
  }
  async createLabTest(args: Prisma.LabTestCreateArgs): Promise<PrismaLabTest> {
    return this.prisma.labTest.create(args);
  }
  async updateLabTest(args: Prisma.LabTestUpdateArgs): Promise<PrismaLabTest> {
    return this.prisma.labTest.update(args);
  }
  async deleteLabTest(args: Prisma.LabTestDeleteArgs): Promise<PrismaLabTest> {
    return this.prisma.labTest.delete(args);
  }
}
